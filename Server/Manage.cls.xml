<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Server.Manage">
<Super>%RegisteredObject</Super>
<TimeCreated>62878,65398.283255</TimeCreated>

<Method name="SafeCmd">
<Description>
убираем из командной строки многие команды
оставляем только разрешенные команды</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>cmd</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set cmd=$piece(cmd,"&&")  // оставляем одну команду
	set cmd=$piece(cmd,"|")
	for i="dir","type","ver","cd" set safe(i)=""  // список разрешенных команд
	if '$data(safe($piece(cmd," "))) set cmd=""   
	quit cmd
]]></Implementation>
</Method>

<Method name="RunCmd">
<Description>
выполнить команду на сервере и сложить результат в глобал ad так, что:
@ad=количество строк
@ad@(номер строки)=значениеa</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>cmd,ad:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set sc=$$$OK
	do $SYSTEM.Process.SetZEOF(1)   	// выключаем режим генерации ошибки на EOF
	// делаем командную строку безопасной
	set cmd(1)=..SafeCmd(cmd) 
	quit:cmd(1)="" $$$ERROR($$$GeneralError,"Недопустимая команда "_cmd)
	set cmd=cmd(1)
	// очищаем присланный глобал
	kill @ad
	set count=0

	try {
	// открываем устройство с выполнением командной строки и чтением ответа
	open cmd:"QR" if '$test  $$$ThrowStatus($$$ERROR($$$GeneralError,"Не удалось выполнить команду "_cmd))
	Set IO=$IO  // запоминаем текущее устройство
	// вычитываем построчно результат команды пока не наступит конец файла и складываем его в глобал
	for  { 
		use cmd 
		read str quit:$zeof=-1
		set @ad@($Increment(count))=str
		}
	set @ad=count
	// закрываем устройство 
	#dim e as %Exception.AbstractException
	} Catch e {
			set sc=e.AsStatus()
			do e.Log()   // 
	}
	// закрываем устройство 
	close cmd

	// возвращаем текущее устройство
	If $data(IO) Use IO
 quit sc
]]></Implementation>
</Method>
</Class>
</Export>
